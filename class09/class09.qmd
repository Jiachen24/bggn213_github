---
title: "class09: Machine Learning mini project"
author: "Jiachen Fan (A17662703)"
format: pdf
---
# Exploratory data analysis

```{r}
# Save your input data file into your Project directory
fna.data <- "WisconsinCancer.csv"

# Complete the following code to input the data and store as wisc.df
wisc.df <-  read.csv(fna.data, row.names=1)
```

```{r}
# We can use -1 here to remove the first column
wisc.data <- wisc.df[,-1]
```


```{r}
# Create diagnosis vector for later 
diagnosis <- as.factor(wisc.df$diagnosis)
```

> Q1. How many observations are in this dataset?

```{r}
nrow(wisc.data)
```
There are 569 observations.

> Q2. How many of the observations have a malignant diagnosis?

```{r}
table(diagnosis)
```
212 have a malignant diagnosis.

> Q3. How many variables/features in the data are suffixed with _mean?

```{r}
length(grep('_mean',colnames(wisc.df)))
```
10 variables in '_mean'.

# 2. Principal Component Analysis

```{r}
# Check column means and standard deviations
colMeans(wisc.data)

apply(wisc.data,2,sd)
```
```{r}
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp(wisc.data, scale = TRUE)
```

```{r}
# Look at summary of results
v <- summary(wisc.pr)
pcvar <- v$importance[3,]
pcvar
```
> Q4. From your results, what proportion of the original variance is captured by the first principal components (PC1)?

44.27% of the original variance is captured by PC1.

> Q5. How many principal components (PCs) are required to describe at least 70% of the original variance in the data?

```{r}
which(pcvar >= 0.7)[1]
```

Three principal components are required, and they are PC1, PC2, PC3.

> Q6. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?

```{r}
which(pcvar >= 0.9)[1]
```

Seven principal components.


```{r}
biplot(wisc.pr)
```
> Q7. What stands out to you about this plot? Is it easy or difficult to understand? Why?

It is hard to see the contents because rownames are printed as well. It is difficult to understand.

```{r}
# Scatter plot observations by components 1 and 2
plot( wisc.pr$x, col = diagnosis , 
     xlab = "PC1", ylab = "PC2")
```

> Q8. Generate a similar plot for principal components 1 and 3. What do you notice about these plots?

```{r}
plot( wisc.pr$x[,c(1,3)] , col = diagnosis , 
     xlab = "PC1", ylab = "PC3")
```
Try to use 'ggplot2'
```{r}
library(ggplot2)

df <- as.data.frame(wisc.pr$x)
df$diagnosis <- diagnosis

ggplot(df) + 
  aes(PC1, PC2, col=diagnosis) + 
  geom_point()
```

```{r}
# Calculate variance of each component
pr.var <- wisc.pr$sdev^2
head(pr.var)
```

```{r}
# Variance explained by each principal component: pve
pve <- pr.var / sum(pr.var)

# Plot variance explained for each principal component
plot(pve, xlab = "Principal Component", 
     ylab = "Proportion of Variance Explained", 
     ylim = c(0, 1), type = "o")
```

```{r}
# Alternative scree plot of the same data, note data driven y-axis
barplot(pve, ylab = "Precent of Variance Explained",
     names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )

```

```{r}
## ggplot based graph
#install.packages("factoextra")
library(factoextra)
fviz_eig(wisc.pr, addlabels = TRUE)
```
> Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean? This tells us how much this original feature contributes to the first PC.

```{r}
wisc.pr$rotation[,1]['concave.points_mean']
```
This tells us 26.0853% of PC1 are contributed by this original feature.

# 3. Hierarchical clustering
```{r}
# Scale the wisc.data data using the "scale()" function
data.scaled <- scale(wisc.data)
```

```{r}
data.dist <- dist(data.scaled)
```

```{r}
wisc.hclust <- hclust(data.dist, method='complete')
```

> Q10. Using the plot() and abline() functions, what is the height at which the clustering model has 4 clusters?

```{r}
plot(wisc.hclust)
abline(h=c(19,20), col="red", lty=2)
```
The clustering model has 4 clusters at the heights of 19 and 20.

```{r}
wisc.hclust.clusters <- cutree(wisc.hclust, k=4)
table(wisc.hclust.clusters, diagnosis)
```
> Q11. OPTIONAL: Can you find a better cluster vs diagnoses match by cutting into a different number of clusters between 2 and 10? How do you judge the quality of your result in each case?

```{r}
for (i in 2:10){
  clusters <- cutree(wisc.hclust, k=i)
  print(table(clusters,diagnosis))
}
  
  
```
4 clusters is the best.

> Q12. Which method gives your favorite results for the same data.dist dataset? Explain your reasoning.

```{r}
wisc.hclust.complete <- hclust(data.dist, method="complete")
plot(wisc.hclust.complete)
```
```{r}
wisc.hclust.single <- hclust(data.dist, method="single")
plot(wisc.hclust.single)
```
```{r}
wisc.hclust.average <- hclust(data.dist, method="average")
plot(wisc.hclust.average)
```
```{r}
wisc.hclust.ward.D2 <- hclust(data.dist, method="ward.D2")
plot(wisc.hclust.ward.D2)
```
I think "ward.D2" method gives me best results. I can get a clear clustering result vs diagnoses match only with 2 clusters.

# 4. Combining methods

```{r}
wisc.pr.hclust <- hclust(dist(wisc.pr$x[, 1:7]), method="ward.D2")
plot(wisc.pr.hclust)
abline(h=80,col='red')
```


```{r}
grps <- cutree(wisc.pr.hclust, k=2)
table(grps)
```

```{r}
table(grps, diagnosis)
```

```{r}
plot(wisc.pr$x[,1:2], col=grps)
```

```{r}
plot(wisc.pr$x[,1:2], col=diagnosis)
```

```{r}
g <- as.factor(grps)
levels(g)
```

```{r}
g <- relevel(g,2)
levels(g)
```

```{r}
# Plot using our re-ordered factor 
plot(wisc.pr$x[,1:2], col=g)
```


```{r}
#| eval: false
library(rgl)
plot3d(wisc.pr$x[,1:3], xlab="PC 1", ylab="PC 2", zlab="PC 3", cex=1.5, size=1, type="s", col=grps)
```
```{r}
## Use the distance along the first 7 PCs for clustering i.e. wisc.pr$x[, 1:7]
wisc.pr.hclust <- hclust(dist(wisc.pr$x[, 1:7]), method="ward.D2")
```

> Q13. How well does the newly created model with four clusters separate out the two diagnoses?

```{r}
table(grps, diagnosis)
```

> Q14. How well do the hierarchical clustering models you created in previous sections (i.e. before PCA) do in terms of separating the diagnoses? Again, use the table() function to compare the output of each model (wisc.km$cluster and wisc.hclust.clusters) with the vector containing the actual diagnoses.

```{r}
table(wisc.hclust.clusters, diagnosis)
```
PCA model is better because we only need two clusters compared to 4 factors.

# 5. Sensitivity/Specificity

> Q15. OPTIONAL: Which of your analysis procedures resulted in a clustering model with the best specificity? How about sensitivity?

# 6. Prediction
```{r}
url <- "new_samples.csv"
#url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(wisc.pr, newdata=new)
npc
```

```{r}
plot(wisc.pr$x[,1:2], col=g)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
```

> Q16. Which of these new patients should we prioritize for follow up based on your results?

The patients in the group 2 should be priortized for follow up.